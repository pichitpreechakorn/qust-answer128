{"version":3,"sources":["component/modal/modal_success.js","component/modal/modal_fail.js","data/dataQuest.js","component/card/card.js","component/card/card_sort.js","component/home/home.js","component/nav/nav.js","component/footer/footer.js","App.js","serviceWorker.js","index.js","logo.svg"],"names":["ModalSuccess","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","modal","setState","addNumber","closemodal","_this2","react_default","a","createElement","reactstrap_es","isOpen","id","answer","color","onClick","nextStep","closeModal","React","Component","dataQuest","no","qust","answer2","CardForm","handleSubmit","e","console","log","getAnswer","value","toggle","status","checkAnswer","statusModalSuccess","statusModalFail","number","dataQust","randomNumber","rand","Math","random","parseInt","setTimeout","_this3","class","xs","md","sm","className","onSubmit","row","type","name","innerRef","input","block","outline","bind","modal_success","modal_fail","App","headTitle","choice1","choice2","size","card_sort","card_card","Example","assertThisInitialized","light","expand","href","navbar","Footer","nav_Example","react_background_image_loader_default","src","home","footer_footer","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"yQA4CeA,qBArCX,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACfE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KACDQ,MAAQ,CACTC,OAAO,GAHIR,0EAQfG,KAAKM,SAAS,CAAED,OAAQL,KAAKI,MAAMC,QACnCL,KAAKJ,MAAMW,iDAGXP,KAAKJ,MAAMY,YAAW,oCAEjB,IAAAC,EAAAT,KACL,OACIU,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAOC,OAAQd,KAAKI,MAAMC,OACtBK,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACIH,EAAAC,EAAAC,cAAA,KAAGG,GAAG,QAAN,6EAEJL,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACIH,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,KAAGG,GAAG,cACFL,EAAAC,EAAAC,cAAA,wCAAeZ,KAAKJ,MAAMoB,UAItCN,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACIH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQI,MAAM,UAAUC,QAAS,kBAAMT,EAAKU,aAA5C,oCACAT,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQI,MAAM,YAAYC,QAAS,kBAAMT,EAAKW,eAA9C,kCA/BGC,IAAMC,YCgClB3B,cAjCX,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACfE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KACDQ,MAAQ,CACTC,OAAO,GAHIR,4EAQfG,KAAKJ,MAAMY,YAAW,oCAEjB,IAAAC,EAAAT,KACL,OACIU,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAOC,OAAQd,KAAKI,MAAMC,OACtBK,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACIH,EAAAC,EAAAC,cAAA,KAAGG,GAAG,QAAN,qDAEJL,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACIH,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,KAAGG,GAAG,cACFL,EAAAC,EAAAC,cAAA,wCAAeZ,KAAKJ,MAAMoB,UAItCN,EAAAC,EAAAC,cAACC,EAAA,EAAD,KAEIH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQI,MAAM,YAAYC,QAAS,kBAAMT,EAAKW,eAA9C,gCA3BGC,IAAMC,WCJlBC,EAAA,CACX,CACIC,GAAK,SACLC,KAAO,6jBACPT,OAAS,iaACTU,QAAU,iaAEd,CACIF,GAAK,SACLC,KAAO,mvBACPT,OAAS,wOAEb,CACIQ,GAAK,SACLC,KAAO,0dACPT,OAAS,wOAEb,CACIQ,GAAK,SACLC,KAAO,+iBACPT,OAAS,y0BAEb,CACIQ,GAAK,SACLC,KAAO,+vBACPT,OAAS,6jBAEb,CACIQ,GAAK,SACLC,KAAO,mpBACPT,OAAS,4SAEb,CACIQ,GAAK,SACLC,KAAO,gHACPT,OAAS,qwBAEb,CACIQ,GAAK,SACLC,KAAO,uQACPT,OAAS,yUAEb,CACIQ,GAAK,SACLC,KAAO,0UACPT,OAAS,gWAEb,CACIQ,GAAK,eACLC,KAAO,wUACPT,OAAS,4RAEb,CACIQ,GAAK,eACLC,KAAO,6vBACPT,OAAS,oPAEb,CACIQ,GAAK,eACLC,KAAO,iiCACPT,OAAS,gPCuEFW,qBAxHb,SAAAA,EAAY/B,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA2B,IACjB9B,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA6B,GAAAxB,KAAAH,KAAMJ,KAuBRgC,aAAe,SAACC,GACdC,QAAQC,IAAIlC,EAAKmC,UAAUC,QAzBVpC,EA4BnBqC,OAAS,WACPrC,EAAKS,SAAS,CAAE6B,QAAStC,EAAKO,MAAM+B,SACpCL,QAAQC,IAAIlC,EAAKmC,UAAUC,OAC3BpC,EAAKuC,eA7BLvC,EAAKO,MAAQ,CACXiC,oBAAoB,EACpBC,iBAAiB,EACjBC,OAAQ,GALO1C,mFASjBiC,QAAQC,IAAIS,EAAS,GAAGf,mDAGxBzB,KAAKyC,sDAEQ,IAAAhC,EAAAT,KAIP0C,EAHM,EAGO,GAAAC,KAAKC,SACxB5C,KAAKM,SAAS,CAAEiC,OAAQM,SAAS7C,KAAKI,MAAMmC,OAASG,KACrDI,WAAW,WACThB,QAAQC,IAAItB,EAAKL,MAAMmC,SACtB,2CAY2B,KAAzBvC,KAAKgC,UAAUC,OAA0BjC,KAAKgC,UAAUC,QAAUO,EAASxC,KAAKI,MAAMmC,QAAQvB,QACjGhB,KAAKM,SAAS,CAAE+B,oBAAoB,IACpCP,QAAQC,IAAI,uBAEoB,KAAzB/B,KAAKgC,UAAUC,QACtBjC,KAAKM,SAAS,CAAEgC,iBAAiB,IACjCR,QAAQC,IAAI,2DAId/B,KAAKyC,eACLX,QAAQC,IAAI,yDAEHI,GACTnC,KAAKM,SAAS,CACZgC,gBAAiBH,EACjBE,mBAAoBF,qCAGf,IAAAY,EAAA/C,KACP,OACEU,EAAAC,EAAAC,cAAA,OAAKoC,MAAM,aACTtC,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKoC,GAAI,GAAIC,GAAI,GAAIC,GAAI,IACvBzC,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAWE,GAAG,QAEZL,EAAAC,EAAAC,cAACC,EAAA,EAAD,8CAAgB2B,EAASxC,KAAKI,MAAMmC,QAAQf,GAA5C,MAGFd,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAAA,OAAKwC,UAAU,aACb1C,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKsC,GAAI,EAAGF,GAAI,GACdvC,EAAAC,EAAAC,cAAA,KAAGG,GAAG,YAAN,IAAkBL,EAAAC,EAAAC,cAAA,iCAAlB,MAEFF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKsC,GAAI,GAAIF,GAAI,IACfvC,EAAAC,EAAAC,cAAA,KAAGG,GAAG,YAAN,IAAmByB,EAASxC,KAAKI,MAAMmC,QAAQd,KAA/C,OAGJf,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMwC,SAAUrD,KAAK4B,cACnBlB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAWyC,KAAG,GACZ5C,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKsC,GAAI,EAAGF,GAAI,GACdvC,EAAAC,EAAAC,cAAA,KAAGG,GAAG,YAAN,IAAkBL,EAAAC,EAAAC,cAAA,iCAAlB,MAEFF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKsC,GAAI,GAAIF,GAAI,IACfvC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE0C,KAAK,WACLC,KAAK,OACLzC,GAAG,cACH0C,SAAU,SAACC,GAAD,OAAWX,EAAKf,UAAY0B,OAI5ChD,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQI,MAAM,UAAU0C,OAAK,EAACC,SAAO,EAAC1C,QAASlB,KAAKkC,OAAO2B,KAAK7D,MAAOuD,KAAK,UAC1E7C,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAOE,GAAG,cAAV,8EASVf,KAAKI,MAAMiC,oBACX3B,EAAAC,EAAAC,cAACkD,EAAD,CACEtD,WAAYR,KAAKoB,WAAWyC,KAAK7D,MACjCO,UAAWP,KAAKO,UAAUsD,KAAK7D,MAC/BgB,OAAQwB,EAASxC,KAAKI,MAAMmC,QAAQvB,SAItChB,KAAKI,MAAMkC,iBACX5B,EAAAC,EAAAC,cAACmD,EAAD,CACEvD,WAAYR,KAAKoB,WAAWyC,KAAK7D,MACjCgB,OAAQwB,EAASxC,KAAKI,MAAMmC,QAAQvB,mBA/G7BM,cCqHRK,cApHX,SAAAA,EAAY/B,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA2B,IACf9B,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA6B,GAAAxB,KAAAH,KAAMJ,KAOVgC,aAAe,SAACC,GACZC,QAAQC,IAAIlC,EAAKmC,UAAUC,QATZpC,EAYnBqC,OAAS,WACLrC,EAAKS,SAAS,CAAE6B,QAAStC,EAAKO,MAAM+B,SACpCL,QAAQC,IAAIlC,EAAKmC,UAAUC,OAC3BpC,EAAKuC,eAbLvC,EAAKO,MAAQ,CACTiC,oBAAoB,EACpBC,iBAAiB,EACjBC,OAAQ1C,EAAKD,MAAM2C,QALR1C,6EAkBe,KAAzBG,KAAKgC,UAAUC,OAA0BjC,KAAKgC,UAAUC,QAAUO,EAASxC,KAAKI,MAAMmC,QAAQvB,QAAUhB,KAAKgC,UAAUC,QAAUO,EAASxC,KAAKI,MAAMmC,QAAQb,QAKzJ1B,KAAKgC,UAAUC,QAAUO,EAASxC,KAAKI,MAAMmC,QAAQvB,QAC1DhB,KAAKM,SAAS,CAAEgC,iBAAkBtC,KAAKI,MAAMkC,kBAC7CR,QAAQC,IAAI,uBAEkB,KAAzB/B,KAAKgC,UAAUC,QACpBjC,KAAKM,SAAS,CAAEgC,iBAAkBtC,KAAKI,MAAMkC,kBAC7CR,QAAQC,IAAI,wBAVZ/B,KAAKM,SAAS,CAAE+B,oBAAqBrC,KAAKI,MAAMiC,qBAEhDP,QAAQC,IAAI,2DAYhB/B,KAAKgC,UAAUC,MAAQ,GACvBH,QAAQC,IAAI/B,KAAKI,MAAMmC,OAAS,GAChCvC,KAAKM,SAAS,CAAEiC,OAAQvC,KAAKI,MAAMmC,OAAS,uCAErCJ,GACPnC,KAAKM,SAAS,CACVgC,gBAAiBH,EACjBE,mBAAoBF,qCAGnB,IAAA1B,EAAAT,KACSA,KAAKI,MACnB,OACIM,EAAAC,EAAAC,cAAA,OAAKoC,MAAM,aACXtC,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACIH,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACIH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKoC,GAAI,GAAIC,GAAI,GAAIC,GAAI,IACrBzC,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACIH,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACIH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAWE,GAAG,QACVL,EAAAC,EAAAC,cAACC,EAAA,EAAD,8CAAgB2B,EAASxC,KAAKI,MAAMmC,QAAQf,GAA5C,MAIJd,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACIH,EAAAC,EAAAC,cAAA,OAAKwC,UAAU,aACX1C,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACIH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKsC,GAAI,EAAGF,GAAI,GACZvC,EAAAC,EAAAC,cAAA,KAAGG,GAAG,YAAN,IAAkBL,EAAAC,EAAAC,cAAA,iCAAlB,MAEJF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKsC,GAAI,GAAIF,GAAI,IACbvC,EAAAC,EAAAC,cAAA,KAAGG,GAAG,YAAN,IAAmByB,EAASxC,KAAKI,MAAMmC,QAAQd,KAA/C,OAGRf,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMwC,SAAUrD,KAAK4B,cACjBlB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAWyC,KAAG,GACV5C,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKsC,GAAI,EAAGF,GAAI,GACZvC,EAAAC,EAAAC,cAAA,KAAGG,GAAG,YAAN,IAAkBL,EAAAC,EAAAC,cAAA,iCAAlB,MAEJF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKsC,GAAI,GAAIF,GAAI,IACbvC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACI0C,KAAK,WACLC,KAAK,OACLzC,GAAG,cACH0C,SAAU,SAACC,GAAD,OAAWjD,EAAKuB,UAAY0B,OAIlDhD,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQI,MAAM,UAAU0C,OAAK,EAACC,SAAO,EAAC1C,QAASlB,KAAKkC,OAAO2B,KAAK7D,MAAOuD,KAAK,UACxE7C,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAOE,GAAG,cAAV,4EAMhBL,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAOI,MAAM,WACTP,EAAAC,EAAAC,cAAA,KAAGG,GAAG,eAAN,+UAKRf,KAAKI,MAAMiC,oBACX3B,EAAAC,EAAAC,cAACkD,EAAD,CACItD,WAAYR,KAAKoB,WAAWyC,KAAK7D,MACjCO,UAAWP,KAAKO,UAAUsD,KAAK7D,MAC/BgB,OAAQwB,EAASxC,KAAKI,MAAMmC,QAAQvB,SAIxChB,KAAKI,MAAMkC,iBACX5B,EAAAC,EAAAC,cAACmD,EAAD,CACIvD,WAAYR,KAAKoB,WAAWyC,KAAK7D,MACjCgB,OAAQwB,EAASxC,KAAKI,MAAMmC,QAAQvB,oBA1G7CM,aCqDR0C,cAvDb,SAAAA,EAAYpE,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAgE,IACjBnE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAkE,GAAA7D,KAAAH,KAAMJ,KACDQ,MAAQ,CACX6D,WAAW,EACXC,SAAS,EACTC,SAAS,GALMtE,wEAQV,IAAAY,EAAAT,KACP,OACEU,EAAAC,EAAAC,cAAA,OAAKwC,UAAU,OAEb1C,EAAAC,EAAAC,cAAA,UAAQwC,UAAU,cAGhB1C,EAAAC,EAAAC,cAAA,OAAKG,GAAG,aACLf,KAAKI,MAAM6D,WACVvD,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAAA,MAAIG,GAAG,cAAP,uFACAL,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,SAAOG,GAAG,cAAV,oGACAL,EAAAC,EAAAC,cAAA,OAAKwC,UAAU,aACb1C,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKoC,GAAI,GAAIE,GAAI,GAAID,GAAI,GAAInC,GAAG,YAC9BL,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQ+C,SAAO,EAACD,OAAK,EAACS,KAAK,KAAKnD,MAAM,UAAUC,QAAS,kBAAMT,EAAKH,SAAS,CAAE4D,SAAUzD,EAAKL,MAAM8D,QAASC,SAAS,MAAtH,qFAEFzD,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKoC,GAAI,GAAIE,GAAI,GAAID,GAAI,GAAInC,GAAG,cAC9BL,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQ+C,SAAO,EAACD,OAAK,EAACS,KAAK,KAAKnD,MAAM,UAAUC,QAAS,kBAAMT,EAAKH,SAAS,CAAE6D,SAAU1D,EAAKL,MAAM+D,QAASD,SAAS,MAAtH,qDASZxD,EAAAC,EAAAC,cAAA,OAAKwC,UAAU,aACZpD,KAAKI,MAAM8D,SACVxD,EAAAC,EAAAC,cAACyD,EAAD,CACE9B,OAAQ,IAGXvC,KAAKI,MAAM+D,SACVzD,EAAAC,EAAAC,cAAC0D,EAAD,CACE/B,OAAQvC,KAAKJ,MAAM2C,mBA7CjBjB,qBCUGiD,sBACnB,SAAAA,EAAY3E,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAuE,IACjB1E,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAyE,GAAApE,KAAAH,KAAMJ,KAEDsC,OAASrC,EAAKqC,OAAO2B,KAAZ/D,OAAA0E,EAAA,EAAA1E,QAAA0E,EAAA,EAAA1E,CAAAD,KACdA,EAAKO,MAAQ,CACXU,QAAQ,GALOjB,wEASjBG,KAAKM,SAAS,CACZQ,QAASd,KAAKI,MAAMU,0CAItB,OACEJ,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQI,MAAM,QAAQwD,OAAK,EAACC,OAAO,MACjChE,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAa8D,KAAK,IAAI5D,GAAG,aAAzB,2EACAL,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAeK,QAASlB,KAAKkC,SAC7BxB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAUC,OAAQd,KAAKI,MAAMU,OAAQ8D,QAAM,GACzClE,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKuC,UAAU,UAAUwB,QAAM,GAC7BlE,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAS8D,KAAK,eAAe5D,GAAG,aAAhC,+CAEFL,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAS8D,KAAK,2CAA2C5D,GAAG,aAA5D,yCAEFL,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAS8D,KAAK,2CAA2C5D,GAAG,aAA5D,sEA7BqBM,IAAMC,YCK5BuD,2LAfP,OACInE,EAAAC,EAAAC,cAAA,OAAKwC,UAAU,aACX1C,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACIH,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACIH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKuC,UAAU,YAAYH,GAAG,KAAKE,GAAG,MAClCzC,EAAAC,EAAAC,cAAA,KAAGwC,UAAU,kBAAb,oDAPP9B,cC+CN0C,cA3Cb,SAAAA,EAAYpE,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAgE,IACjBnE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAkE,GAAA7D,KAAAH,KAAMJ,KACDQ,MAAQ,CACXwC,OAAQ,GAHO/C,wEAQjB,OACEa,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACkE,EAAD,MACApE,EAAAC,EAAAC,cAAA,OAAKwC,UAAU,aACb1C,EAAAC,EAAAC,cAACmE,EAAApE,EAAD,CAAiBqE,IAAI,6DACnBtE,EAAAC,EAAAC,cAACqE,EAAD,CACE1C,OAAQvC,KAAKI,MAAMwC,WAIzBlC,EAAAC,EAAAC,cAAA,OAAKwC,UAAU,UACf1C,EAAAC,EAAAC,cAACsE,EAAD,eApBU5D,aCIE6D,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCVNC,IAASC,OAAO/E,EAAAC,EAAAC,cAAC8E,EAAD,MAASC,SAASC,eAAe,SDyH3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC,mCEnInBC,EAAAC,QAAiBC,EAAAC,EAAuB","file":"static/js/main.53052af0.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\nimport { Icon } from 'semantic-ui-react'\r\n\r\nimport './modal.css'\r\n\r\nclass ModalSuccess extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            modal: true\r\n        };\r\n\r\n    }\r\n    nextStep() {\r\n        this.setState({ modal: !this.state.modal })\r\n        this.props.addNumber()\r\n    }\r\n    closeModal() {\r\n        this.props.closemodal(false)\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Modal isOpen={this.state.modal} >\r\n                    <ModalHeader>\r\n                        <p id=\"text\">คำตอบถูกต้อง</p>\r\n                    </ModalHeader>\r\n                    <ModalBody>\r\n                        <div>\r\n                            <p id=\"textAnswer\">\r\n                                <b>เฉลย : </b>{this.props.answer}\r\n                            </p>\r\n                        </div>\r\n                    </ModalBody>\r\n                    <ModalFooter>\r\n                        <Button color=\"success\" onClick={() => this.nextStep()}> ต่อไป </Button>\r\n                        <Button color=\"secondary\" onClick={() => this.closeModal()}> ปิด </Button>\r\n                    </ModalFooter>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default ModalSuccess","import React from 'react';\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, Label } from 'reactstrap';\r\nimport './modal.css'\r\n\r\nclass ModalSuccess extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            modal: true\r\n        };\r\n\r\n    }\r\n    closeModal(){\r\n        this.props.closemodal(false)\r\n    }  \r\n    render() {\r\n        return (\r\n            <div>\r\n                <Modal isOpen={this.state.modal} >\r\n                    <ModalHeader>\r\n                        <p id=\"text\">คำตอบผิด</p>\r\n                    </ModalHeader>\r\n                    <ModalBody>\r\n                        <div>\r\n                            <p id=\"textAnswer\">\r\n                                <b>เฉลย : </b>{this.props.answer}\r\n                            </p>\r\n                        </div>\r\n                    </ModalBody>\r\n                    <ModalFooter>\r\n                        {/* <Button color=\"primary\" onClick={() => this.setState({ modal: !this.state.modal })}>Do Something</Button> */}\r\n                        <Button color=\"secondary\" onClick={() => this.closeModal()}>ปิด</Button>\r\n                    </ModalFooter>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default ModalSuccess","export default [\r\n    {\r\n        no : \"๑\",\r\n        qust : \"อยากทราบว่า ชีวิตความเป็นอยู่ของทหารภายใน กรม กอง มีความแตกต่างกับเมื่ออยู่บ้าน ในสาระสำคัญ อะไรบ้าง\",\r\n        answer : \"๑. ต้องอยู่ในระเบียบวินัยข้อบังคับ\\n๒. ต้องดำเนินชีวิตประจำวันเหมือนกันหมด\",\r\n        answer2 : \"๑. ต้องอยู่ในระเบียบวินัยข้อบังคับ ๒. ต้องดำเนินชีวิตประจำวันเหมือนกันหมด\" \r\n    },\r\n    {\r\n        no : \"๒\",\r\n        qust : \"เครื่องแบบทหารถือว่าเป็นเครื่องแบบที่มีเกียรติประชาชนทั่วไปไม่มีสิทธิจะแต่งได้  ถ้าประชาชนนำเครื่องแบบทหารไปแต่งจะเกิดผลอย่างไร\",\r\n        answer : \"ถือว่าผิดกฎหมายและจะได้รับโทษตามกฎหมาย\"\r\n    },\r\n    {\r\n        no : \"๓\",\r\n        qust : \"ทหารทุกคนจะต้องมีความรับผิดชอบต่ออาวุธประจำกายของตนอย่างไร จงตอบมาสั้น ๆ พอเข้าใจ\",\r\n        answer : \"เอาใจใส่ตรวจตราไม่ให้อาวุธชำรุดเสียหาย\" \r\n    },\r\n    {\r\n        no : \"๔\",\r\n        qust : \"ทหารทุกคนย่อมมีความรับผิดชอบเกี่ยวกับการปฏิบัติตนในหน่วยทหาร อยู่ ๓ ประการ อยากทราบว่ามีอะไรบ้าง\",\r\n        answer : \"๑. ต้องปรับตนให้เข้ากับสภาพแวดล้อมในหน่วยทหาร ๒. ต้องปฏิบัติตามระเบียบข้อบังคับ ๓. ต้องเห็นอกเห็นใจ และเอื้อเฟื้อเผื่อแผ่ในระหว่างเพื่อนทหารด้วยกัน\"\r\n    },\r\n    {\r\n        no : \"๕\",\r\n        qust : \"เมื่อทหารเป็นพลเรือน ทหารจะต้องอยู่ภายใต้กฎหมายบ้านเมืองอยากทราบว่าเมื่อมาเป็นทหาร ทหารจะต้องอยู่ภายใต้กฎหมายและข้อบังคับอะไรบ้าง\",\r\n        answer : \"๑. กฎหมายบ้านเมือง ๒. กฎหมายอาญาทหาร ๓. พระราชบัญญัติวินัยทหาร ๔. แบบธรรมเนียมและข้อบังคับของทหารทั้งปวง\" \r\n    },\r\n    {\r\n        no : \"๖\",\r\n        qust : \"พลทหารปีที่ ๑ จะได้รับเงินเดือนในอัตราเดือนละเท่าไรและจะต้องถูกทางราชการหักเงินเดือนไว้เป็นเงินฝากเดือนละเท่าไร\",\r\n        answer : \"จะได้รับเงินเดือน  ๓,๖๗๐ บาท และถูกหักฝากเดือนละ ๘๕ บาท \"\r\n    },\r\n    {\r\n        no : \"๗\",\r\n        qust : \"เบี้ยเลี้ยง คืออะไร\",\r\n        answer : \"เบี้ยเลี้ยง คือเงินอีกส่วนหนึ่งที่ทางราชการจ่ายให้นอกเหนือจากเงินเดือนเพื่อประสงค์ให้ผู้บังคับบัญชาใช้จ่ายเป็นเงินค่าประกอบเลี้ยง\" \r\n    },\r\n    {\r\n        no : \"๘\",\r\n        qust : \"เงินฝากส่วนตัว ทหารฝาก ทหารจะได้รับคืนเมื่อไร\",\r\n        answer : \"เงินฝากส่วนตัว ทหารจะได้รับคืนเมื่อปลดออกจากกองประจำการ\"\r\n    },\r\n    {\r\n        no : \"๙\",\r\n        qust : \"ทำไมผู้บังคับบัญชาจึงไม่ยอมให้ทหารใหม่ลา ใน ๑๐ สัปดาห์แรก\",\r\n        answer : \"เพราะทหารใหม่จะต้องรับการฝึกสอนตามระเบียบและหลักสูตรการฝึก\" \r\n    },\r\n    {\r\n        no : \"๑๐\",\r\n        qust : \"การลาสำหรับทหารกองประจำการแบ่งออกเป็นกี่ประเภท อะไรบ้าง\",\r\n        answer : \"การลาแบ่งออกเป็น ๒ ประเภท คือ ๑. การลาป่วย  ๒. การลากิจ\"\r\n    },\r\n    {\r\n        no : \"๑๑\",\r\n        qust : \"ในระหว่างที่ทหารลากิจถ้าได้รับทราบว่าผู้บังคับบัญชาเรียกกลับหรือทราบว่ามีสถานการณ์ฉุกเฉินเกิดขึ้นในบ้านเมืองทหารจะต้องทำอย่างไร\",\r\n        answer : \"ทหารต้องรีบเดินทางกลับหน่วยโดยเร็วที่สุด\" \r\n    },\r\n    {\r\n        no : \"๑๒\",\r\n        qust : \"เมื่อทหารเป็นพลเรือนถ้าอยู่ในครอบครัวย่อมจะมีหัวหน้าครอบครัวมีผู้ใหญ่บ้าน มีกำนัน มีนายอำเภอปกครองดูแล เมื่อมาเป็นทหารก็มีผู้ปกครองดูแลเช่นกัน ทหารเรียกผู้ที่คอยดูแลทหารว่าอย่างไร\",\r\n        answer : \"เรียกผู้ที่คอยดูแลทหารว่า ผู้บังคับบัญชา\"\r\n    }\r\n]","import React, { Component } from 'react';\r\nimport {\r\n  Card, CardText, CardBody, CardImg,\r\n  CardTitle, CardSubtitle, Button, Form, FormGroup, Label, Input, Col, Row, Container\r\n} from 'reactstrap';\r\nimport ModalSuccess from '../modal/modal_success'\r\nimport ModalFaild from '../modal/modal_fail'\r\nimport dataQust from '../../data/dataQuest'\r\nimport './card.css'\r\n\r\nclass CardForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      statusModalSuccess: false,\r\n      statusModalFail: false,\r\n      number: 0\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    console.log(dataQust[0].qust)\r\n  }\r\n  componentWillMount() {\r\n    this.randomNumber()\r\n  }\r\n  randomNumber() {\r\n    const min = 0;\r\n    // const max = 127;\r\n    const max = 11;\r\n    const rand = min + Math.random() * (max - min);\r\n    this.setState({ number: parseInt(this.state.number + rand) });\r\n    setTimeout(() => {\r\n      console.log(this.state.number)\r\n    }, 100)\r\n  }\r\n  handleSubmit = (e) => {\r\n    console.log(this.getAnswer.value)\r\n\r\n  }\r\n  toggle = () => {\r\n    this.setState({ status: !this.state.status })\r\n    console.log(this.getAnswer.value)\r\n    this.checkAnswer()\r\n  }\r\n  checkAnswer() {\r\n    if ((this.getAnswer.value !== \"\" || null) && (this.getAnswer.value === dataQust[this.state.number].answer)) {\r\n      this.setState({ statusModalSuccess: true })\r\n      console.log(\"ถูก\")\r\n    }\r\n    else if (this.getAnswer.value === \"\") {\r\n      this.setState({ statusModalFail: true })\r\n      console.log(\"ผิด\")\r\n    }\r\n  }\r\n  addNumber() {\r\n    this.randomNumber()\r\n    console.log(\"ถูก\")\r\n  }\r\n  closeModal(status) {\r\n    this.setState({\r\n      statusModalFail: status,\r\n      statusModalSuccess: status\r\n    })\r\n  }\r\n  render() {\r\n    return (\r\n      <div class=\"card-form\">\r\n        <Row>\r\n          <Col xs={12} md={12} sm={12}>\r\n            <Card>\r\n              <CardBody>\r\n                <CardTitle id=\"text\">\r\n                  {/* <Label> ข้อที่ {dataQust[0].no} </Label> */}\r\n                  <Label> ข้อที่ {dataQust[this.state.number].no} </Label>\r\n\r\n                </CardTitle>\r\n                <CardBody>\r\n                  <div className=\"form-body\">\r\n                    <Row>\r\n                      <Col sm={2} xs={2}>\r\n                        <p id=\"text-sub\"> <u>ถาม :</u> </p>\r\n                      </Col>\r\n                      <Col sm={10} xs={10}>\r\n                        <p id=\"text-sub\"> {dataQust[this.state.number].qust} </p>\r\n                      </Col>\r\n                    </Row>\r\n                    <Form onSubmit={this.handleSubmit}>\r\n                      <FormGroup row>\r\n                        <Col sm={2} xs={2}>\r\n                          <p id=\"text-sub\"> <u>ตอบ :</u> </p>\r\n                        </Col>\r\n                        <Col sm={10} xs={10}>\r\n                          <Input\r\n                            type=\"textarea\"\r\n                            name=\"text\"\r\n                            id=\"exampleText\"\r\n                            innerRef={(input) => this.getAnswer = input}\r\n                          />\r\n                        </Col>\r\n                      </FormGroup>\r\n                      <Button color=\"success\" block outline onClick={this.toggle.bind(this)} type=\"submit\">\r\n                        <Label id=\"btn-submit\"> ยืนยันคำตอบ </Label>\r\n                      </Button>\r\n                    </Form>\r\n                  </div>\r\n                </CardBody>\r\n\r\n              </CardBody>\r\n            </Card>\r\n            {\r\n              this.state.statusModalSuccess &&\r\n              <ModalSuccess\r\n                closemodal={this.closeModal.bind(this)}\r\n                addNumber={this.addNumber.bind(this)}\r\n                answer={dataQust[this.state.number].answer}\r\n              />\r\n            }\r\n            {\r\n              this.state.statusModalFail &&\r\n              <ModalFaild\r\n                closemodal={this.closeModal.bind(this)}\r\n                answer={dataQust[this.state.number].answer}\r\n              />\r\n            }\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CardForm;\r\n","import React, { Component } from 'react';\r\nimport {\r\n    Card, CardText, CardBody, CardImg,\r\n    CardTitle, CardSubtitle, Button, Form, FormGroup, Label, Input, Col, Row, Alert,Container\r\n} from 'reactstrap';\r\nimport ModalSuccess from '../modal/modal_success'\r\nimport ModalFaild from '../modal/modal_fail'\r\nimport dataQust from '../../data/dataQuest'\r\nimport './card.css'\r\n\r\nclass CardForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            statusModalSuccess: false,\r\n            statusModalFail: false,\r\n            number: this.props.number\r\n        };\r\n    }\r\n    handleSubmit = (e) => {\r\n        console.log(this.getAnswer.value)\r\n\r\n    }\r\n    toggle = () => {\r\n        this.setState({ status: !this.state.status })\r\n        console.log(this.getAnswer.value)\r\n        this.checkAnswer()\r\n    }\r\n    checkAnswer() {\r\n        if ((this.getAnswer.value !== \"\" || null) && (this.getAnswer.value === dataQust[this.state.number].answer || this.getAnswer.value === dataQust[this.state.number].answer2)) {\r\n            this.setState({ statusModalSuccess: !this.state.statusModalSuccess })\r\n            // this.addNumber()\r\n            console.log(\"ถูก\")\r\n        }\r\n        else if (this.getAnswer.value !== dataQust[this.state.number].answer) {\r\n            this.setState({ statusModalFail: !this.state.statusModalFail })\r\n            console.log(\"ผิด\")\r\n        }\r\n        else if (this.getAnswer.value === \"\") {\r\n            this.setState({ statusModalFail: !this.state.statusModalFail })\r\n            console.log(\"ผิด\")\r\n        }\r\n    }\r\n    addNumber() {\r\n        this.getAnswer.value = \"\"\r\n        console.log(this.state.number + 1)\r\n        this.setState({ number: this.state.number + 1 })\r\n    }\r\n    closeModal(status) {\r\n        this.setState({\r\n            statusModalFail: status,\r\n            statusModalSuccess: status\r\n        })\r\n    }\r\n    render() {\r\n        let numbers = this.state\r\n        return (\r\n            <div class=\"card-form\">\r\n            <Container>\r\n                <Row>\r\n                    <Col xs={12} md={12} sm={12}>\r\n                        <Card>\r\n                            <CardBody>\r\n                                <CardTitle id=\"text\">\r\n                                    <Label> ข้อที่ {dataQust[this.state.number].no} </Label>\r\n                                    {/* <Label> ข้อที่ {this.state.number + 1} </Label> */}\r\n\r\n                                </CardTitle>\r\n                                <CardBody>\r\n                                    <div className=\"form-body\">\r\n                                        <Row>\r\n                                            <Col sm={2} xs={2}>\r\n                                                <p id=\"text-sub\"> <u>ถาม :</u> </p>\r\n                                            </Col>\r\n                                            <Col sm={10} xs={10}>\r\n                                                <p id=\"text-sub\"> {dataQust[this.state.number].qust} </p>\r\n                                            </Col>\r\n                                        </Row>\r\n                                        <Form onSubmit={this.handleSubmit}>\r\n                                            <FormGroup row>\r\n                                                <Col sm={2} xs={2}>\r\n                                                    <p id=\"text-sub\"> <u>ตอบ :</u> </p>\r\n                                                </Col>\r\n                                                <Col sm={10} xs={10}>\r\n                                                    <Input\r\n                                                        type=\"textarea\"\r\n                                                        name=\"text\"\r\n                                                        id=\"exampleText\"\r\n                                                        innerRef={(input) => this.getAnswer = input}\r\n                                                    />\r\n                                                </Col>\r\n                                            </FormGroup>\r\n                                            <Button color=\"success\" block outline onClick={this.toggle.bind(this)} type=\"submit\">\r\n                                                <Label id=\"btn-submit\"> ยืนยันคำตอบ </Label>\r\n                                            </Button>\r\n                                        </Form>\r\n                                    </div>\r\n                                </CardBody>\r\n\r\n                                <Alert color=\"warning\">\r\n                                    <p id=\"detail-text\">หมายเหตุ : กรุณากรอกคำตอบให้ถูกต้องมากที่สุด เช่น 1 = ๑ เป็นต้น</p>\r\n                                </Alert>\r\n                            </CardBody>\r\n                        </Card>\r\n                        {\r\n                            this.state.statusModalSuccess &&\r\n                            <ModalSuccess\r\n                                closemodal={this.closeModal.bind(this)}\r\n                                addNumber={this.addNumber.bind(this)}\r\n                                answer={dataQust[this.state.number].answer}\r\n                            />\r\n                        }\r\n                        {\r\n                            this.state.statusModalFail &&\r\n                            <ModalFaild\r\n                                closemodal={this.closeModal.bind(this)}\r\n                                answer={dataQust[this.state.number].answer}\r\n                            />\r\n                        }\r\n                    </Col>\r\n                </Row>\r\n                </Container>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CardForm;\r\n","import React, { Component } from 'react';\r\nimport { Button, Card, Jumbotron, Row, Col } from 'reactstrap';\r\nimport logo from '../../logo.svg';\r\nimport CardComponent from '../card/card'\r\nimport CardComponentSort from '../card/card_sort'\r\nimport '../../App.css';\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      headTitle: true,\r\n      choice1: false,\r\n      choice2: false\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        {/* <img src=\"https://images6.alphacoders.com/310/thumb-1920-310137.jpg\" className=\"img-bg\"/> */}\r\n        <header className=\"App-header\">\r\n\r\n          {/* <img src={logo} className=\"App-logo\" alt=\"logo\" /> */}\r\n          <div id=\"headTitle\">\r\n            {this.state.headTitle &&\r\n              <Jumbotron>\r\n                <h1 id=\"head-title\">การสอนอมรม 128 ข้อ</h1>\r\n                <hr />\r\n                <label id=\"head-title\">เลือกรูปแบบคำถาม</label>\r\n                <div className=\"btn-start\">\r\n                  <Row>\r\n                    <Col xs={12} sm={12} md={12} id=\"btn-sort\">\r\n                      <Button outline block size=\"lg\" color=\"success\" onClick={() => this.setState({ choice1: !this.state.choice1, choice2: false })}> แบบเรียงลำดับ </Button>\r\n                    </Col>\r\n                    <Col xs={12} sm={12} md={12} id=\"btn-random\">\r\n                      <Button outline block size=\"lg\" color=\"primary\" onClick={() => this.setState({ choice2: !this.state.choice2, choice1: false })}> แบบสุ่ม </Button>\r\n                    </Col>\r\n                  </Row>\r\n\r\n                </div>\r\n              </Jumbotron>\r\n            }\r\n          </div>\r\n\r\n          <div className=\"card-form\">\r\n            {this.state.choice1 &&\r\n              <CardComponentSort\r\n                number={0}\r\n              />\r\n            }\r\n            {this.state.choice2 &&\r\n              <CardComponent\r\n                number={this.props.number}\r\n              />\r\n            }\r\n          </div>\r\n\r\n        </header>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport {\r\n  Collapse,\r\n  Navbar,\r\n  NavbarToggler,\r\n  NavbarBrand,\r\n  Nav,\r\n  NavItem,\r\n  NavLink,\r\n  UncontrolledDropdown,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem\r\n} from 'reactstrap';\r\nimport './nav.css'\r\n\r\n\r\nexport default class Example extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.toggle = this.toggle.bind(this);\r\n    this.state = {\r\n      isOpen: false\r\n    };\r\n  }\r\n  toggle() {\r\n    this.setState({\r\n      isOpen: !this.state.isOpen\r\n    });\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Navbar color=\"light\" light expand=\"md\">\r\n          <NavbarBrand href=\"/\" id=\"text-head\">ถามตอบ 128 คำถาม</NavbarBrand>\r\n          <NavbarToggler onClick={this.toggle} />\r\n          <Collapse isOpen={this.state.isOpen} navbar>\r\n            <Nav className=\"ml-auto\" navbar>\r\n              <NavItem>\r\n                <NavLink href=\"/components/\" id=\"text-head\">คำแนะนำ</NavLink>\r\n              </NavItem>\r\n              <NavItem>\r\n                <NavLink href=\"https://github.com/reactstrap/reactstrap\" id=\"text-head\">ติดต่อ</NavLink>\r\n              </NavItem>\r\n              <NavItem>\r\n                <NavLink href=\"https://github.com/reactstrap/reactstrap\" id=\"text-head\">เกี่ยวกับ</NavLink>\r\n              </NavItem>\r\n              {/* <UncontrolledDropdown nav inNavbar>\r\n                <DropdownToggle nav caret>\r\n                  Options\r\n                </DropdownToggle>\r\n                <DropdownMenu right>\r\n                  <DropdownItem>\r\n                    Option 1\r\n                  </DropdownItem>\r\n                  <DropdownItem>\r\n                    Option 2\r\n                  </DropdownItem>\r\n                  <DropdownItem divider />\r\n                  <DropdownItem>\r\n                    Reset\r\n                  </DropdownItem>\r\n                </DropdownMenu>\r\n              </UncontrolledDropdown> */}\r\n            </Nav>\r\n          </Collapse>\r\n        </Navbar>\r\n      </div>\r\n    );\r\n  }\r\n}","import React, { Component } from 'react'\r\nimport { Container, Row, Col } from \"reactstrap\";\r\nimport { Icon, Image } from 'semantic-ui-react'\r\nimport './footer.css'\r\n\r\nclass Footer extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"footer-bg\">\r\n                <Container>\r\n                    <Row>\r\n                        <Col className=\"copyright\" xs=\"12\" sm=\"12\">\r\n                            <p className=\"text-copyrigth\">©PichitreeChakorn 7002 2018 v1.0.0</p>\r\n                        </Col>\r\n\r\n                    </Row>\r\n                </Container>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Footer","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport BackgroundImage from 'react-background-image-loader';\nimport Home from './component/home/home'\nimport Nav from './component/nav/nav'\nimport Footer from './component/footer/footer'\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      random: 0\n    };\n  }\n  \n  render() {\n    return (\n      <div>\n        <Nav />\n        <div className=\"bg-header\">\n          <BackgroundImage src=\"https://images6.alphacoders.com/310/thumb-1920-310137.jpg\">\n            <Home\n              number={this.state.random}\n            />\n          </BackgroundImage>\n        </div>\n        <div className=\"footer\">\n        <Footer/>\n        </div>\n      </div>\n\n      // <div className=\"App\">\n      //   <header className=\"App-header\">\n      //     <img src={logo} className=\"App-logo\" alt=\"logo\" />\n      //     <p>\n      //       Edit <code>src/App.js</code> and save to reload.\n      //     </p>\n      //     <a\n      //       className=\"App-link\"\n      //       href=\"https://reactjs.org\"\n      //       target=\"_blank\"\n      //       rel=\"noopener noreferrer\"\n      //     >\n      //       Learn React\n      //     </a>\n      //   </header>\n      // </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n// import 'semantic-ui-css/semantic.min.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}