{"version":3,"sources":["logo.svg","component/modal/modal_success.js","data/dataQuest.js","component/modal/modal_fail.js","component/card/card.js","component/card/card_sort.js","component/home/home.js","component/nav/nav.js","component/footer/footer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","ModalSuccess","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","modal","setState","addNumber","closemodal","_this2","react_default","a","createElement","reactstrap_es","isOpen","id","answer","color","onClick","nextStep","closeModal","React","Component","dataQuest","no","qust","answer2","CardForm","handleSubmit","e","console","log","getAnswer","value","toggle","status","checkAnswer","statusModalSuccess","statusModalFail","status_textarea","number","dataQust","randomNumber","rand","Math","random","parseInt","setTimeout","_this3","class","xs","md","sm","className","onSubmit","row","invalid","rows","type","name","innerRef","input","placeholder","Button","animated","fluid","inverted","size","bind","Content","visible","hidden","Icon","modal_success","App","headTitle","choice1","choice2","icon","labelPosition","card_sort","card_card","Example","assertThisInitialized","light","expand","href","navbar","Footer","nav_Example","react_background_image_loader_default","src","home","footer_footer","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"6EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,sZC4CzBC,sBArCX,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACfE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KACDQ,MAAQ,CACTC,OAAO,GAHIR,0EAQfG,KAAKM,SAAS,CAAED,OAAQL,KAAKI,MAAMC,QACnCL,KAAKJ,MAAMW,iDAGXP,KAAKJ,MAAMY,YAAW,oCAEjB,IAAAC,EAAAT,KACL,OACIU,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAOC,OAAQd,KAAKI,MAAMC,OACtBK,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACIH,EAAAC,EAAAC,cAAA,KAAGG,GAAG,QAAN,6EAEJL,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACIH,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,KAAGG,GAAG,cACFL,EAAAC,EAAAC,cAAA,wCAAeZ,KAAKJ,MAAMoB,UAItCN,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACIH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQI,MAAM,UAAUC,QAAS,kBAAMT,EAAKU,aAA5C,oCACAT,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQI,MAAM,YAAYC,QAAS,kBAAMT,EAAKW,eAA9C,kCA/BGC,IAAMC,YCNlBC,GCIYF,IAAMC,UDJlB,CACX,CACIE,GAAK,SACLC,KAAO,6jBACPT,OAAS,iaACTU,QAAU,iaAEd,CACIF,GAAK,SACLC,KAAO,mvBACPT,OAAS,wOAEb,CACIQ,GAAK,SACLC,KAAO,0dACPT,OAAS,wOAEb,CACIQ,GAAK,SACLC,KAAO,+iBACPT,OAAS,y0BAEb,CACIQ,GAAK,SACLC,KAAO,+vBACPT,OAAS,6jBAEb,CACIQ,GAAK,SACLC,KAAO,mpBACPT,OAAS,4SAEb,CACIQ,GAAK,SACLC,KAAO,gHACPT,OAAS,qwBAEb,CACIQ,GAAK,SACLC,KAAO,uQACPT,OAAS,yUAEb,CACIQ,GAAK,SACLC,KAAO,0UACPT,OAAS,gWAEb,CACIQ,GAAK,eACLC,KAAO,wUACPT,OAAS,4RAEb,CACIQ,GAAK,eACLC,KAAO,6vBACPT,OAAS,oPAEb,CACIQ,GAAK,eACLC,KAAO,iiCACPT,OAAS,iPEmIFW,sBAnLb,SAAAA,EAAY/B,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA2B,IACjB9B,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA6B,GAAAxB,KAAAH,KAAMJ,KAwBRgC,aAAe,SAACC,GACdC,QAAQC,IAAIlC,EAAKmC,UAAUC,QA1BVpC,EA6BnBqC,OAAS,WACPrC,EAAKS,SAAS,CAAE6B,QAAStC,EAAKO,MAAM+B,SACpCL,QAAQC,IAAIlC,EAAKmC,UAAUC,OAC3BpC,EAAKuC,eA9BLvC,EAAKO,MAAQ,CACXiC,oBAAoB,EACpBC,iBAAiB,EACjBC,gBAAiB,EACjBC,OAAQ,GANO3C,mFAUjBiC,QAAQC,IAAIU,EAAS,GAAGhB,mDAGxBzB,KAAK0C,sDAEQ,IAAAjC,EAAAT,KAIP2C,EAHM,EAGO,GAAAC,KAAKC,SACxB7C,KAAKM,SAAS,CAAEkC,OAAQM,SAAS9C,KAAKI,MAAMoC,OAASG,KACrDI,WAAW,WACTjB,QAAQC,IAAItB,EAAKL,MAAMoC,SACtB,2CAY2B,KAAzBxC,KAAKgC,UAAUC,OAA0BjC,KAAKgC,UAAUC,QAAUQ,EAASzC,KAAKI,MAAMoC,QAAQxB,QAAUhB,KAAKgC,UAAUC,QAAUQ,EAASzC,KAAKI,MAAMoC,QAAQd,QAMzJ1B,KAAKgC,UAAUC,QAAUQ,EAASzC,KAAKI,MAAMoC,QAAQxB,QAC5DhB,KAAKM,SAAS,CAAEgC,iBAAkBtC,KAAKI,MAAMkC,gBAAiBC,gBAAiB,IAC/EvC,KAAKgC,UAAUC,MAAQ,GACvBH,QAAQC,IAAI,uBAEoB,KAAzB/B,KAAKgC,UAAUC,QACtBjC,KAAKM,SAAS,CAAEgC,iBAAkBtC,KAAKI,MAAMkC,gBAAiBC,gBAAiB,IAC/EvC,KAAKgC,UAAUC,MAAQ,GACvBH,QAAQC,IAAI,wBAbZ/B,KAAKM,SAAS,CAAE+B,oBAAqBrC,KAAKI,MAAMiC,qBAChDrC,KAAKgC,UAAUC,MAAQ,GACvBjC,KAAKO,YACLuB,QAAQC,IAAI,2DAcd/B,KAAK0C,eACLZ,QAAQC,IAAI,yDAEHI,GACTnC,KAAKM,SAAS,CACZgC,gBAAiBH,EACjBE,mBAAoBF,qCAGf,IAAAa,EAAAhD,KACP,OACEU,EAAAC,EAAAC,cAAA,OAAKqC,MAAM,aACTvC,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKqC,GAAI,GAAIC,GAAI,GAAIC,GAAI,IACvB1C,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAWE,GAAG,QAEZL,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAOE,GAAG,WAAV,yCAA6B0B,EAASzC,KAAKI,MAAMoC,QAAQhB,GAAzD,MAGFd,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAAA,OAAKyC,UAAU,aACb3C,EAAAC,EAAAC,cAAA,OAAKG,GAAG,gBACNL,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKuC,GAAI,EAAGF,GAAI,GACdxC,EAAAC,EAAAC,cAAA,KAAGG,GAAG,YAAN,IAAkBL,EAAAC,EAAAC,cAAA,iCAAlB,MAEFF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKuC,GAAI,GAAIF,GAAI,IACfxC,EAAAC,EAAAC,cAAA,KAAGG,GAAG,YAAN,IAAmB0B,EAASzC,KAAKI,MAAMoC,QAAQf,KAA/C,QAINf,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMyC,SAAUtD,KAAK4B,cACnBlB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAW0C,KAAG,GACZ7C,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKuC,GAAI,EAAGF,GAAI,GACdxC,EAAAC,EAAAC,cAAA,KAAGG,GAAG,YAAN,IAAkBL,EAAAC,EAAAC,cAAA,iCAAlB,MAEFF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKuC,GAAI,GAAIF,GAAI,IACiB,IAA/BlD,KAAKI,MAAMmC,gBACV7B,EAAAC,EAAAC,cAAA,OAAKyC,UAAU,mBACb3C,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE2C,SAAO,EACPC,KAAK,IACLC,KAAK,WACLC,KAAK,OACL5C,GAAG,cACH6C,SAAU,SAACC,GAAD,OAAWb,EAAKhB,UAAY6B,GACtCC,YAAY,oEAEdpD,EAAAC,EAAAC,cAACC,EAAA,EAAD,sGAGFH,EAAAC,EAAAC,cAAA,OAAKyC,UAAU,mBACb3C,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE6C,KAAK,WACLD,KAAK,IACLE,KAAK,OACL5C,GAAG,cACH6C,SAAU,SAACC,GAAD,OAAWb,EAAKhB,UAAY6B,GACtCC,YAAY,uEAOtBpD,EAAAC,EAAAC,cAACmD,EAAA,EAAD,CACEC,UAAQ,EACRC,OAAK,EACLC,UAAQ,EAACjD,MAAM,QACfkD,KAAK,QACLjD,QAASlB,KAAKkC,OAAOkC,KAAKpE,MAC1B0D,KAAK,UAELhD,EAAAC,EAAAC,cAACmD,EAAA,EAAOM,QAAR,CAAgBC,SAAO,GACrB5D,EAAAC,EAAAC,cAAA,SAAOG,GAAG,cAAV,yEAEFL,EAAAC,EAAAC,cAACmD,EAAA,EAAOM,QAAR,CAAgBE,QAAM,GACpB7D,EAAAC,EAAAC,cAAC4D,EAAA,EAAD,CAAMb,KAAK,gBACXjD,EAAAC,EAAAC,cAAA,SAAOG,GAAG,cAAV,6DAOZL,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAOI,MAAM,WACXP,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKuC,GAAI,EAAGD,GAAI,EAAGD,GAAI,GACrBxC,EAAAC,EAAAC,cAAA,KAAGG,GAAG,eAAN,wDAEFL,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKuC,GAAI,GAAID,GAAI,GAAID,GAAI,IACvBxC,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,MAAIG,GAAG,eAAP,0MACAL,EAAAC,EAAAC,cAAA,MAAIG,GAAG,eAAP,2MACAL,EAAAC,EAAAC,cAAA,MAAIG,GAAG,eAAP,0MAQVf,KAAKI,MAAMiC,oBACX3B,EAAAC,EAAAC,cAAC6D,EAAD,CACEjE,WAAYR,KAAKoB,WAAWgD,KAAKpE,MACjCO,UAAWP,KAAKO,UAAU6D,KAAKpE,MAC/BgB,OAAQyB,EAASzC,KAAKI,MAAMoC,QAAQxB,mBAnK7BM,cCyKRK,cAxKX,SAAAA,EAAY/B,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA2B,IACf9B,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA6B,GAAAxB,KAAAH,KAAMJ,KAQVgC,aAAe,SAACC,GACZC,QAAQC,IAAIlC,EAAKmC,UAAUC,QAVZpC,EAanBqC,OAAS,WACLrC,EAAKS,SAAS,CAAE6B,QAAStC,EAAKO,MAAM+B,SACpCL,QAAQC,IAAIlC,EAAKmC,UAAUC,OAC3BpC,EAAKuC,eAdLvC,EAAKO,MAAQ,CACTiC,oBAAoB,EACpBC,iBAAiB,EACjBC,gBAAiB,EACjBC,OAAQ3C,EAAKD,MAAM4C,QANR3C,6EAmBe,KAAzBG,KAAKgC,UAAUC,OAA0BjC,KAAKgC,UAAUC,QAAUQ,EAASzC,KAAKI,MAAMoC,QAAQxB,QAAUhB,KAAKgC,UAAUC,QAAUQ,EAASzC,KAAKI,MAAMoC,QAAQd,QAMzJ1B,KAAKgC,UAAUC,QAAUQ,EAASzC,KAAKI,MAAMoC,QAAQxB,QAC1DhB,KAAKM,SAAS,CAAEgC,iBAAkBtC,KAAKI,MAAMkC,gBAAiBC,gBAAiB,IAC/EvC,KAAKgC,UAAUC,MAAQ,GACvBH,QAAQC,IAAI,uBAEkB,KAAzB/B,KAAKgC,UAAUC,QACpBjC,KAAKM,SAAS,CAAEgC,iBAAkBtC,KAAKI,MAAMkC,gBAAiBC,gBAAiB,IAC/EvC,KAAKgC,UAAUC,MAAQ,GACvBH,QAAQC,IAAI,wBAbZ/B,KAAKM,SAAS,CAAE+B,oBAAqBrC,KAAKI,MAAMiC,qBAEhDrC,KAAKgC,UAAUC,MAAQ,GACvBH,QAAQC,IAAI,2DAchB/B,KAAKgC,UAAUC,MAAQ,GACvBH,QAAQC,IAAI/B,KAAKI,MAAMoC,OAAS,GAChCxC,KAAKM,SAAS,CAAEkC,OAAQxC,KAAKI,MAAMoC,OAAS,uCAErCL,GACPnC,KAAKM,SAAS,CACVgC,gBAAiBH,EACjBE,mBAAoBF,qCAGnB,IAAA1B,EAAAT,KACSA,KAAKI,MACnB,OACIM,EAAAC,EAAAC,cAAA,OAAKqC,MAAM,aAEPvC,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACIH,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACIH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAWE,GAAG,QACVL,EAAAC,EAAAC,cAAA,KAAGG,GAAG,WAAN,yCAAyB0B,EAASzC,KAAKI,MAAMoC,QAAQhB,GAArD,MAIJd,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACIH,EAAAC,EAAAC,cAAA,OAAKyC,UAAU,aACX3C,EAAAC,EAAAC,cAAA,OAAKG,GAAG,gBACJL,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACIH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKuC,GAAG,IAAIF,GAAG,KACXxC,EAAAC,EAAAC,cAAA,KAAGG,GAAG,YAAN,IAAkBL,EAAAC,EAAAC,cAAA,iCAAlB,MAEJF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKuC,GAAG,KAAKF,GAAG,MACZxC,EAAAC,EAAAC,cAAA,KAAGG,GAAG,YAAN,IAAmB0B,EAASzC,KAAKI,MAAMoC,QAAQf,KAA/C,QAIZf,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMyC,SAAUtD,KAAK4B,cACjBlB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAW0C,KAAG,GACV7C,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKuC,GAAG,IAAIF,GAAG,KACXxC,EAAAC,EAAAC,cAAA,KAAGG,GAAG,YAAN,IAAkBL,EAAAC,EAAAC,cAAA,iCAAlB,MAEJF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKuC,GAAG,KAAKF,GAAG,MACoB,IAA/BlD,KAAKI,MAAMmC,gBACR7B,EAAAC,EAAAC,cAAA,OAAKyC,UAAU,mBACX3C,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACI2C,SAAO,EACPC,KAAK,IACLC,KAAK,WACLC,KAAK,OACL5C,GAAG,cACH6C,SAAU,SAACC,GAAD,OAAWpD,EAAKuB,UAAY6B,GACtCC,YAAY,oEAEhBpD,EAAAC,EAAAC,cAACC,EAAA,EAAD,sGAGJH,EAAAC,EAAAC,cAAA,OAAKyC,UAAU,mBACX3C,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACI6C,KAAK,WACLD,KAAK,IACLE,KAAK,OACL5C,GAAG,cACH6C,SAAU,SAACC,GAAD,OAAWpD,EAAKuB,UAAY6B,GACtCC,YAAY,uEAOhCpD,EAAAC,EAAAC,cAACmD,EAAA,EAAD,CACIC,UAAQ,EACRC,OAAK,EACLC,UAAQ,EAACjD,MAAM,QACfkD,KAAK,QACLjD,QAASlB,KAAKkC,OAAOkC,KAAKpE,MAC1B0D,KAAK,UAELhD,EAAAC,EAAAC,cAACmD,EAAA,EAAOM,QAAR,CAAgBC,SAAO,GACnB5D,EAAAC,EAAAC,cAAA,SAAOG,GAAG,cAAV,yEAEJL,EAAAC,EAAAC,cAACmD,EAAA,EAAOM,QAAR,CAAgBE,QAAM,GAClB7D,EAAAC,EAAAC,cAAC4D,EAAA,EAAD,CAAMb,KAAK,gBACXjD,EAAAC,EAAAC,cAAA,SAAOG,GAAG,cAAV,6DAYxBL,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAOI,MAAM,WACTP,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACIH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKuC,GAAI,EAAGD,GAAI,EAAGD,GAAI,GACnBxC,EAAAC,EAAAC,cAAA,KAAGG,GAAG,eAAN,wDAEJL,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKuC,GAAI,GAAID,GAAI,GAAID,GAAI,IACrBxC,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,MAAIG,GAAG,eAAP,0MACAL,EAAAC,EAAAC,cAAA,MAAIG,GAAG,eAAP,2MACAL,EAAAC,EAAAC,cAAA,MAAIG,GAAG,eAAP,0MAQpBf,KAAKI,MAAMiC,oBACX3B,EAAAC,EAAAC,cAAC6D,EAAD,CACIjE,WAAYR,KAAKoB,WAAWgD,KAAKpE,MACjCO,UAAWP,KAAKO,UAAU6D,KAAKpE,MAC/BgB,OAAQyB,EAASzC,KAAKI,MAAMoC,QAAQxB,iBAzJrCM,aC8FRoD,cAhGb,SAAAA,EAAY9E,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA0E,IACjB7E,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA4E,GAAAvE,KAAAH,KAAMJ,KACDQ,MAAQ,CACXuE,WAAW,EACXC,SAAS,EACTC,SAAS,GALMhF,wEAQV,IAAAY,EAAAT,KACP,OACEU,EAAAC,EAAAC,cAAA,OAAKyC,UAAU,OAEb3C,EAAAC,EAAAC,cAAA,UAAQyC,UAAU,cAGhB3C,EAAAC,EAAAC,cAAA,OAAKG,GAAG,aACLf,KAAKI,MAAMuE,WACVjE,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAAA,MAAIG,GAAG,cAAP,uFACAL,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,SAAOG,GAAG,cAAV,oGACAL,EAAAC,EAAAC,cAAA,OAAKyC,UAAU,aACb3C,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKqC,GAAI,GAAIE,GAAI,GAAID,GAAI,GAAIpC,GAAG,YAC9BL,EAAAC,EAAAC,cAACmD,EAAA,EAAD,CACEC,UAAQ,EACRC,OAAK,EACLa,MAAI,EAACC,cAAc,OACnBb,UAAQ,EAACjD,MAAM,QACfkD,KAAK,QACLjD,QAAS,kBAAMT,EAAKH,SAAS,CAAEsE,SAAUnE,EAAKL,MAAMwE,QAASC,SAAS,MACtEnE,EAAAC,EAAAC,cAACmD,EAAA,EAAOM,QAAR,CAAgBC,SAAO,GACrB5D,EAAAC,EAAAC,cAAC4D,EAAA,EAAD,CAAMb,KAAK,kBACXjD,EAAAC,EAAAC,cAAA,QAAMyC,UAAU,OAAhB,uFAEF3C,EAAAC,EAAAC,cAACmD,EAAA,EAAOM,QAAR,CAAgBE,QAAM,GACpB7D,EAAAC,EAAAC,cAAC4D,EAAA,EAAD,CAAMb,KAAK,qBAKjBjD,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKqC,GAAI,GAAIE,GAAI,GAAID,GAAI,GAAIpC,GAAG,cAC9BL,EAAAC,EAAAC,cAACmD,EAAA,EAAD,CACEC,UAAQ,EACRC,OAAK,EAELC,UAAQ,EAACjD,MAAM,OACfkD,KAAK,QACLjD,QAAS,kBAAMT,EAAKH,SAAS,CAAEuE,SAAUpE,EAAKL,MAAMyE,QAASD,SAAS,MACtElE,EAAAC,EAAAC,cAACmD,EAAA,EAAOM,QAAR,CACEC,SAAO,EACPQ,MAAI,EAACC,cAAc,QAEnBrE,EAAAC,EAAAC,cAAC4D,EAAA,EAAD,CAAMb,KAAK,WACXjD,EAAAC,EAAAC,cAAA,QAAMyC,UAAU,OAAhB,mDAEF3C,EAAAC,EAAAC,cAACmD,EAAA,EAAOM,QAAR,CAAgBE,QAAM,GACpB7D,EAAAC,EAAAC,cAAC4D,EAAA,EAAD,CAAMb,KAAK,kBAW3BjD,EAAAC,EAAAC,cAAA,OAAKyC,UAAU,aACZrD,KAAKI,MAAMwE,SACVlE,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKqC,GAAI,GAAIE,GAAI,GAAID,GAAI,IACvBzC,EAAAC,EAAAC,cAACoE,EAAD,CACExC,OAAQ,MAMfxC,KAAKI,MAAMyE,SACVnE,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKqC,GAAI,GAAIE,GAAI,GAAID,GAAI,IACvBzC,EAAAC,EAAAC,cAACqE,EAAD,CACEzC,OAAQxC,KAAKJ,MAAM4C,qBApFrBlB,qBCSG4D,sBACnB,SAAAA,EAAYtF,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAkF,IACjBrF,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAoF,GAAA/E,KAAAH,KAAMJ,KAEDsC,OAASrC,EAAKqC,OAAOkC,KAAZtE,OAAAqF,EAAA,EAAArF,QAAAqF,EAAA,EAAArF,CAAAD,KACdA,EAAKO,MAAQ,CACXU,QAAQ,GALOjB,wEASjBG,KAAKM,SAAS,CACZQ,QAASd,KAAKI,MAAMU,0CAItB,OACEJ,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQI,MAAM,QAAQmE,OAAK,EAACC,OAAO,MACjC3E,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAayE,KAAK,IAAIvE,GAAG,aAAzB,2EACAL,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAeK,QAASlB,KAAKkC,SAC7BxB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAUC,OAAQd,KAAKI,MAAMU,OAAQyE,QAAM,GACzC7E,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKwC,UAAU,UAAUkC,QAAM,GAC7B7E,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAASyE,KAAK,eAAevE,GAAG,aAAhC,+CAEFL,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAASyE,KAAK,2CAA2CvE,GAAG,aAA5D,yCAEFL,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAASyE,KAAK,2CAA2CvE,GAAG,aAA5D,sEA7BqBM,IAAMC,YCK5BkE,2LAfP,OACI9E,EAAAC,EAAAC,cAAA,OAAKyC,UAAU,aACX3C,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACIH,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACIH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKwC,UAAU,YAAYH,GAAG,KAAKE,GAAG,MAClC1C,EAAAC,EAAAC,cAAA,KAAGyC,UAAU,kBAAb,oDAPP/B,cCmDNoD,cA9Cb,SAAAA,EAAY9E,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA0E,IACjB7E,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA4E,GAAAvE,KAAAH,KAAMJ,KACDQ,MAAQ,CACXyC,OAAQ,GAHOhD,wEAQjB,OACIa,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAKqC,GAAG,KAAKE,GAAG,KAAKD,GAAG,MACpBzC,EAAAC,EAAAC,cAAC6E,EAAD,MACA/E,EAAAC,EAAAC,cAAA,OAAKyC,UAAU,aACb3C,EAAAC,EAAAC,cAAC8E,EAAA/E,EAAD,CAAiBgF,IAAI,6DACnBjF,EAAAC,EAAAC,cAACgF,EAAD,CACEpD,OAAQxC,KAAKI,MAAMyC,WAIzBnC,EAAAC,EAAAC,cAAA,OAAKyC,UAAU,UACb3C,EAAAC,EAAAC,cAACiF,EAAD,gBArBEvE,aCGEwE,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCVNC,IAASC,OAAO1F,EAAAC,EAAAC,cAACyF,EAAD,MAASC,SAASC,eAAe,SDyH3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.a1a88f67.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\nimport { Icon } from 'semantic-ui-react'\r\n\r\nimport './modal.css'\r\n\r\nclass ModalSuccess extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            modal: true\r\n        };\r\n\r\n    }\r\n    nextStep() {\r\n        this.setState({ modal: !this.state.modal })\r\n        this.props.addNumber()\r\n    }\r\n    closeModal() {\r\n        this.props.closemodal(false)\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Modal isOpen={this.state.modal} >\r\n                    <ModalHeader>\r\n                        <p id=\"text\">คำตอบถูกต้อง</p>\r\n                    </ModalHeader>\r\n                    <ModalBody>\r\n                        <div>\r\n                            <p id=\"textAnswer\">\r\n                                <b>เฉลย : </b>{this.props.answer}\r\n                            </p>\r\n                        </div>\r\n                    </ModalBody>\r\n                    <ModalFooter>\r\n                        <Button color=\"success\" onClick={() => this.nextStep()}> ต่อไป </Button>\r\n                        <Button color=\"secondary\" onClick={() => this.closeModal()}> ปิด </Button>\r\n                    </ModalFooter>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default ModalSuccess","export default [\r\n    {\r\n        no : \"๑\",\r\n        qust : \"อยากทราบว่า ชีวิตความเป็นอยู่ของทหารภายใน กรม กอง มีความแตกต่างกับเมื่ออยู่บ้าน ในสาระสำคัญ อะไรบ้าง\",\r\n        answer : \"๑. ต้องอยู่ในระเบียบวินัยข้อบังคับ\\n๒. ต้องดำเนินชีวิตประจำวันเหมือนกันหมด\",\r\n        answer2 : \"๑. ต้องอยู่ในระเบียบวินัยข้อบังคับ ๒. ต้องดำเนินชีวิตประจำวันเหมือนกันหมด\" \r\n    },\r\n    {\r\n        no : \"๒\",\r\n        qust : \"เครื่องแบบทหารถือว่าเป็นเครื่องแบบที่มีเกียรติประชาชนทั่วไปไม่มีสิทธิจะแต่งได้  ถ้าประชาชนนำเครื่องแบบทหารไปแต่งจะเกิดผลอย่างไร\",\r\n        answer : \"ถือว่าผิดกฎหมายและจะได้รับโทษตามกฎหมาย\"\r\n    },\r\n    {\r\n        no : \"๓\",\r\n        qust : \"ทหารทุกคนจะต้องมีความรับผิดชอบต่ออาวุธประจำกายของตนอย่างไร จงตอบมาสั้น ๆ พอเข้าใจ\",\r\n        answer : \"เอาใจใส่ตรวจตราไม่ให้อาวุธชำรุดเสียหาย\" \r\n    },\r\n    {\r\n        no : \"๔\",\r\n        qust : \"ทหารทุกคนย่อมมีความรับผิดชอบเกี่ยวกับการปฏิบัติตนในหน่วยทหาร อยู่ ๓ ประการ อยากทราบว่ามีอะไรบ้าง\",\r\n        answer : \"๑. ต้องปรับตนให้เข้ากับสภาพแวดล้อมในหน่วยทหาร ๒. ต้องปฏิบัติตามระเบียบข้อบังคับ ๓. ต้องเห็นอกเห็นใจ และเอื้อเฟื้อเผื่อแผ่ในระหว่างเพื่อนทหารด้วยกัน\"\r\n    },\r\n    {\r\n        no : \"๕\",\r\n        qust : \"เมื่อทหารเป็นพลเรือน ทหารจะต้องอยู่ภายใต้กฎหมายบ้านเมืองอยากทราบว่าเมื่อมาเป็นทหาร ทหารจะต้องอยู่ภายใต้กฎหมายและข้อบังคับอะไรบ้าง\",\r\n        answer : \"๑. กฎหมายบ้านเมือง ๒. กฎหมายอาญาทหาร ๓. พระราชบัญญัติวินัยทหาร ๔. แบบธรรมเนียมและข้อบังคับของทหารทั้งปวง\" \r\n    },\r\n    {\r\n        no : \"๖\",\r\n        qust : \"พลทหารปีที่ ๑ จะได้รับเงินเดือนในอัตราเดือนละเท่าไรและจะต้องถูกทางราชการหักเงินเดือนไว้เป็นเงินฝากเดือนละเท่าไร\",\r\n        answer : \"จะได้รับเงินเดือน  ๓,๖๗๐ บาท และถูกหักฝากเดือนละ ๘๕ บาท \"\r\n    },\r\n    {\r\n        no : \"๗\",\r\n        qust : \"เบี้ยเลี้ยง คืออะไร\",\r\n        answer : \"เบี้ยเลี้ยง คือเงินอีกส่วนหนึ่งที่ทางราชการจ่ายให้นอกเหนือจากเงินเดือนเพื่อประสงค์ให้ผู้บังคับบัญชาใช้จ่ายเป็นเงินค่าประกอบเลี้ยง\" \r\n    },\r\n    {\r\n        no : \"๘\",\r\n        qust : \"เงินฝากส่วนตัว ทหารฝาก ทหารจะได้รับคืนเมื่อไร\",\r\n        answer : \"เงินฝากส่วนตัว ทหารจะได้รับคืนเมื่อปลดออกจากกองประจำการ\"\r\n    },\r\n    {\r\n        no : \"๙\",\r\n        qust : \"ทำไมผู้บังคับบัญชาจึงไม่ยอมให้ทหารใหม่ลา ใน ๑๐ สัปดาห์แรก\",\r\n        answer : \"เพราะทหารใหม่จะต้องรับการฝึกสอนตามระเบียบและหลักสูตรการฝึก\" \r\n    },\r\n    {\r\n        no : \"๑๐\",\r\n        qust : \"การลาสำหรับทหารกองประจำการแบ่งออกเป็นกี่ประเภท อะไรบ้าง\",\r\n        answer : \"การลาแบ่งออกเป็น ๒ ประเภท คือ ๑. การลาป่วย  ๒. การลากิจ\"\r\n    },\r\n    {\r\n        no : \"๑๑\",\r\n        qust : \"ในระหว่างที่ทหารลากิจถ้าได้รับทราบว่าผู้บังคับบัญชาเรียกกลับหรือทราบว่ามีสถานการณ์ฉุกเฉินเกิดขึ้นในบ้านเมืองทหารจะต้องทำอย่างไร\",\r\n        answer : \"ทหารต้องรีบเดินทางกลับหน่วยโดยเร็วที่สุด\" \r\n    },\r\n    {\r\n        no : \"๑๒\",\r\n        qust : \"เมื่อทหารเป็นพลเรือนถ้าอยู่ในครอบครัวย่อมจะมีหัวหน้าครอบครัวมีผู้ใหญ่บ้าน มีกำนัน มีนายอำเภอปกครองดูแล เมื่อมาเป็นทหารก็มีผู้ปกครองดูแลเช่นกัน ทหารเรียกผู้ที่คอยดูแลทหารว่าอย่างไร\",\r\n        answer : \"เรียกผู้ที่คอยดูแลทหารว่า ผู้บังคับบัญชา\"\r\n    }\r\n]","import React from 'react';\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, Label } from 'reactstrap';\r\nimport './modal.css'\r\n\r\nclass ModalSuccess extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            modal: true\r\n        };\r\n\r\n    }\r\n    closeModal(){\r\n        this.props.closemodal(false)\r\n    }  \r\n    render() {\r\n        return (\r\n            <div>\r\n                <Modal isOpen={this.state.modal} >\r\n                    <ModalHeader>\r\n                        <p id=\"text\">คำตอบผิด</p>\r\n                    </ModalHeader>\r\n                    <ModalBody>\r\n                        <div>\r\n                            <p id=\"textAnswer\">\r\n                                <b>เฉลย : </b>{this.props.answer}\r\n                            </p>\r\n                        </div>\r\n                    </ModalBody>\r\n                    <ModalFooter>\r\n                        {/* <Button color=\"primary\" onClick={() => this.setState({ modal: !this.state.modal })}>Do Something</Button> */}\r\n                        <Button color=\"secondary\" onClick={() => this.closeModal()}>ปิด</Button>\r\n                    </ModalFooter>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default ModalSuccess","import React, { Component } from 'react';\r\nimport {\r\n  Card, CardText, CardBody, CardImg,\r\n  CardTitle, CardSubtitle, Form, FormGroup, Label, Input, Col, Row, Alert, FormFeedback\r\n} from 'reactstrap';\r\nimport { Button, Icon } from 'semantic-ui-react'\r\nimport ModalSuccess from '../modal/modal_success'\r\nimport ModalFaild from '../modal/modal_fail'\r\nimport dataQust from '../../data/dataQuest'\r\nimport './card.css'\r\n\r\nclass CardForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      statusModalSuccess: false,\r\n      statusModalFail: false,\r\n      status_textarea: 1,\r\n      number: 0\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    console.log(dataQust[0].qust)\r\n  }\r\n  componentWillMount() {\r\n    this.randomNumber()\r\n  }\r\n  randomNumber() {\r\n    const min = 0;\r\n    // const max = 127;\r\n    const max = 11;\r\n    const rand = min + Math.random() * (max - min);\r\n    this.setState({ number: parseInt(this.state.number + rand) });\r\n    setTimeout(() => {\r\n      console.log(this.state.number)\r\n    }, 100)\r\n  }\r\n  handleSubmit = (e) => {\r\n    console.log(this.getAnswer.value)\r\n\r\n  }\r\n  toggle = () => {\r\n    this.setState({ status: !this.state.status })\r\n    console.log(this.getAnswer.value)\r\n    this.checkAnswer()\r\n  }\r\n  checkAnswer() {\r\n    if ((this.getAnswer.value !== \"\" || null) && (this.getAnswer.value === dataQust[this.state.number].answer || this.getAnswer.value === dataQust[this.state.number].answer2)) {\r\n      this.setState({ statusModalSuccess: !this.state.statusModalSuccess })\r\n      this.getAnswer.value = \"\"\r\n      this.addNumber()\r\n      console.log(\"ถูก\")\r\n    }\r\n    else if (this.getAnswer.value !== dataQust[this.state.number].answer) {\r\n      this.setState({ statusModalFail: !this.state.statusModalFail, status_textarea: 0 })\r\n      this.getAnswer.value = \"\"\r\n      console.log(\"ผิด\")\r\n    }\r\n    else if (this.getAnswer.value === \"\") {\r\n      this.setState({ statusModalFail: !this.state.statusModalFail, status_textarea: 0 })\r\n      this.getAnswer.value = \"\"\r\n      console.log(\"ผิด\")\r\n    }\r\n  }\r\n  addNumber() {\r\n    this.randomNumber()\r\n    console.log(\"ถูก\")\r\n  }\r\n  closeModal(status) {\r\n    this.setState({\r\n      statusModalFail: status,\r\n      statusModalSuccess: status\r\n    })\r\n  }\r\n  render() {\r\n    return (\r\n      <div class=\"card-form\">\r\n        <Row>\r\n          <Col xs={12} md={12} sm={12}>\r\n            <Card>\r\n              <CardBody>\r\n                <CardTitle id=\"text\">\r\n                  {/* <Label> ข้อที่ {dataQust[0].no} </Label> */}\r\n                  <Label id=\"text-no\"> ข้อที่ {dataQust[this.state.number].no} </Label>\r\n\r\n                </CardTitle>\r\n                <CardBody>\r\n                  <div className=\"form-body\">\r\n                    <div id=\"contai-quest\">\r\n                      <Row>\r\n                        <Col sm={2} xs={2}>\r\n                          <p id=\"text-sub\"> <u>ถาม :</u> </p>\r\n                        </Col>\r\n                        <Col sm={10} xs={10}>\r\n                          <p id=\"text-sub\"> {dataQust[this.state.number].qust} </p>\r\n                        </Col>\r\n                      </Row>\r\n                    </div>\r\n                    <div>\r\n                      <Form onSubmit={this.handleSubmit}>\r\n                        <FormGroup row>\r\n                          <Col sm={2} xs={2}>\r\n                            <p id=\"text-sub\"> <u>ตอบ :</u> </p>\r\n                          </Col>\r\n                          <Col sm={10} xs={10}>\r\n                            {this.state.status_textarea === 0 ?\r\n                              <div className=\"contai-textarea\">\r\n                                <Input\r\n                                  invalid\r\n                                  rows=\"7\"\r\n                                  type=\"textarea\"\r\n                                  name=\"text\"\r\n                                  id=\"exampleText\"\r\n                                  innerRef={(input) => this.getAnswer = input}\r\n                                  placeholder=\"คำตอบ ............................... \"\r\n                                />\r\n                                <FormFeedback>คำตอบไม่ถูกต้อง !</FormFeedback>\r\n                              </div>\r\n                              :\r\n                              <div className=\"contai-textarea\">\r\n                                <Input\r\n                                  type=\"textarea\"\r\n                                  rows=\"7\"\r\n                                  name=\"text\"\r\n                                  id=\"exampleText\"\r\n                                  innerRef={(input) => this.getAnswer = input}\r\n                                  placeholder=\"คำตอบ ............................... \"\r\n                                />\r\n                              </div>\r\n\r\n                            }\r\n                          </Col>\r\n                        </FormGroup>\r\n                        <Button\r\n                          animated\r\n                          fluid\r\n                          inverted color='green'\r\n                          size='large'\r\n                          onClick={this.toggle.bind(this)}\r\n                          type=\"submit\"\r\n                        >\r\n                          <Button.Content visible>\r\n                            <label id=\"btn-submit\"> ยืนยันคำตอบ </label>\r\n                          </Button.Content>\r\n                          <Button.Content hidden>\r\n                            <Icon name='arrow right' />\r\n                            <label id=\"btn-submit\">  ส่งคำตอบ </label>\r\n                          </Button.Content>\r\n                        </Button>\r\n                      </Form>\r\n                    </div>\r\n                  </div>\r\n                </CardBody>\r\n                <Alert color=\"warning\">\r\n                  <Row>\r\n                    <Col sm={2} md={2} xs={2}>\r\n                      <p id=\"detail-text\">หมายเหตุ : </p>\r\n                    </Col>\r\n                    <Col sm={10} md={10} xs={10}>\r\n                      <ul>\r\n                        <li id=\"detail-text\">กรุณากรอกคำตอบให้ถูกต้องมากที่สุด</li>\r\n                        <li id=\"detail-text\">ใช้ตัวเลขไทยเท่านั้น เช่น 1 = ๑ เป็นต้น</li>\r\n                        <li id=\"detail-text\">เว้นวรรคหรือเว้นบรรทัดให้ถูกต้อง</li>\r\n                      </ul>\r\n                    </Col>\r\n                  </Row>\r\n                </Alert>\r\n              </CardBody>\r\n            </Card>\r\n            {\r\n              this.state.statusModalSuccess &&\r\n              <ModalSuccess\r\n                closemodal={this.closeModal.bind(this)}\r\n                addNumber={this.addNumber.bind(this)}\r\n                answer={dataQust[this.state.number].answer}\r\n              />\r\n            }\r\n            {/* {\r\n              this.state.statusModalFail &&\r\n              <ModalFaild\r\n                closemodal={this.closeModal.bind(this)}\r\n                answer={dataQust[this.state.number].answer}\r\n              />\r\n            } */}\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CardForm;\r\n","import React, { Component } from 'react';\r\nimport {\r\n    Card, CardText, CardBody, CardImg,\r\n    CardTitle, CardSubtitle, Form, FormGroup, Label, Input, Col, Row, Alert, FormFeedback\r\n} from 'reactstrap';\r\nimport { Button, Icon } from 'semantic-ui-react'\r\nimport ModalSuccess from '../modal/modal_success'\r\nimport ModalFaild from '../modal/modal_fail'\r\nimport dataQust from '../../data/dataQuest'\r\nimport './card.css'\r\n\r\nclass CardForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            statusModalSuccess: false,\r\n            statusModalFail: false,\r\n            status_textarea: 1,\r\n            number: this.props.number\r\n        };\r\n    }\r\n    handleSubmit = (e) => {\r\n        console.log(this.getAnswer.value)\r\n\r\n    }\r\n    toggle = () => {\r\n        this.setState({ status: !this.state.status })\r\n        console.log(this.getAnswer.value)\r\n        this.checkAnswer()\r\n    }\r\n    checkAnswer() {\r\n        if ((this.getAnswer.value !== \"\" || null) && (this.getAnswer.value === dataQust[this.state.number].answer || this.getAnswer.value === dataQust[this.state.number].answer2)) {\r\n            this.setState({ statusModalSuccess: !this.state.statusModalSuccess })\r\n            // this.addNumber()\r\n            this.getAnswer.value = \"\"\r\n            console.log(\"ถูก\")\r\n        }\r\n        else if (this.getAnswer.value !== dataQust[this.state.number].answer) {\r\n            this.setState({ statusModalFail: !this.state.statusModalFail, status_textarea: 0 })\r\n            this.getAnswer.value = \"\"\r\n            console.log(\"ผิด\")\r\n        }\r\n        else if (this.getAnswer.value === \"\") {\r\n            this.setState({ statusModalFail: !this.state.statusModalFail, status_textarea: 0 })\r\n            this.getAnswer.value = \"\"\r\n            console.log(\"ผิด\")\r\n        }\r\n    }\r\n    addNumber() {\r\n        this.getAnswer.value = \"\"\r\n        console.log(this.state.number + 1)\r\n        this.setState({ number: this.state.number + 1 })\r\n    }\r\n    closeModal(status) {\r\n        this.setState({\r\n            statusModalFail: status,\r\n            statusModalSuccess: status\r\n        })\r\n    }\r\n    render() {\r\n        let numbers = this.state\r\n        return (\r\n            <div class=\"card-form\">\r\n\r\n                <Card>\r\n                    <CardBody>\r\n                        <CardTitle id=\"text\">\r\n                            <p id=\"text-no\"> ข้อที่ {dataQust[this.state.number].no} </p>\r\n                            {/* <Label> ข้อที่ {this.state.number + 1} </Label> */}\r\n\r\n                        </CardTitle>\r\n                        <CardBody>\r\n                            <div className=\"form-body\">\r\n                                <div id=\"contai-quest\">\r\n                                    <Row>\r\n                                        <Col sm=\"2\" xs=\"2\">\r\n                                            <p id=\"text-sub\"> <u>ถาม :</u> </p>\r\n                                        </Col>\r\n                                        <Col sm=\"10\" xs=\"10\">\r\n                                            <p id=\"text-sub\"> {dataQust[this.state.number].qust} </p>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </div>\r\n                                <div>\r\n                                    <Form onSubmit={this.handleSubmit}>\r\n                                        <FormGroup row>\r\n                                            <Col sm=\"2\" xs=\"2\">\r\n                                                <p id=\"text-sub\"> <u>ตอบ :</u> </p>\r\n                                            </Col>\r\n                                            <Col sm=\"10\" xs=\"10\">\r\n                                                {this.state.status_textarea === 0 ?\r\n                                                    <div className=\"contai-textarea\">\r\n                                                        <Input\r\n                                                            invalid\r\n                                                            rows=\"7\"\r\n                                                            type=\"textarea\"\r\n                                                            name=\"text\"\r\n                                                            id=\"exampleText\"\r\n                                                            innerRef={(input) => this.getAnswer = input}\r\n                                                            placeholder=\"คำตอบ ............................... \"\r\n                                                        />\r\n                                                        <FormFeedback>คำตอบไม่ถูกต้อง !</FormFeedback>\r\n                                                    </div>\r\n                                                    :\r\n                                                    <div className=\"contai-textarea\">\r\n                                                        <Input\r\n                                                            type=\"textarea\"\r\n                                                            rows=\"7\"\r\n                                                            name=\"text\"\r\n                                                            id=\"exampleText\"\r\n                                                            innerRef={(input) => this.getAnswer = input}\r\n                                                            placeholder=\"คำตอบ ............................... \"\r\n                                                        />\r\n                                                    </div>\r\n\r\n                                                }\r\n                                            </Col>\r\n                                        </FormGroup>\r\n                                        <Button\r\n                                            animated\r\n                                            fluid\r\n                                            inverted color='green'\r\n                                            size='large'\r\n                                            onClick={this.toggle.bind(this)}\r\n                                            type=\"submit\"\r\n                                        >\r\n                                            <Button.Content visible>\r\n                                                <label id=\"btn-submit\"> ยืนยันคำตอบ </label>\r\n                                            </Button.Content>\r\n                                            <Button.Content hidden>\r\n                                                <Icon name='arrow right' />\r\n                                                <label id=\"btn-submit\">  ส่งคำตอบ </label>\r\n                                            </Button.Content>\r\n                                        </Button>\r\n                                        {/* <Button color=\"success\" block outline onClick={this.toggle.bind(this)} type=\"submit\">\r\n                                            <Label id=\"btn-submit\"> ยืนยันคำตอบ </Label>\r\n                                        </Button> */}\r\n                                    </Form>\r\n                                </div>\r\n\r\n                            </div>\r\n                        </CardBody>\r\n\r\n                        <Alert color=\"warning\">\r\n                            <Row>\r\n                                <Col sm={2} md={2} xs={2}>\r\n                                    <p id=\"detail-text\">หมายเหตุ : </p>\r\n                                </Col>\r\n                                <Col sm={10} md={10} xs={10}>\r\n                                    <ul>\r\n                                        <li id=\"detail-text\">กรุณากรอกคำตอบให้ถูกต้องมากที่สุด</li>\r\n                                        <li id=\"detail-text\">ใช้ตัวเลขไทยเท่านั้น เช่น 1 = ๑ เป็นต้น</li>\r\n                                        <li id=\"detail-text\">เว้นวรรคหรือเว้นบรรทัดให้ถูกต้อง</li>\r\n                                    </ul>\r\n                                </Col>\r\n                            </Row>\r\n                        </Alert>\r\n                    </CardBody>\r\n                </Card>\r\n                {\r\n                    this.state.statusModalSuccess &&\r\n                    <ModalSuccess\r\n                        closemodal={this.closeModal.bind(this)}\r\n                        addNumber={this.addNumber.bind(this)}\r\n                        answer={dataQust[this.state.number].answer}\r\n                    />\r\n                }\r\n                {/* {\r\n                    this.state.statusModalFail &&\r\n                    <ModalFaild\r\n                        closemodal={this.closeModal.bind(this)}\r\n                        answer={dataQust[this.state.number].answer}\r\n                    />\r\n                } */}\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CardForm;\r\n","import React, { Component } from 'react';\r\nimport { Card, Jumbotron, Row, Col } from 'reactstrap';\r\nimport { Button, Icon } from 'semantic-ui-react'\r\nimport logo from '../../logo.svg';\r\nimport CardComponent from '../card/card'\r\nimport CardComponentSort from '../card/card_sort'\r\nimport '../../App.css';\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      headTitle: true,\r\n      choice1: false,\r\n      choice2: false\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        {/* <img src=\"https://images6.alphacoders.com/310/thumb-1920-310137.jpg\" className=\"img-bg\"/> */}\r\n        <header className=\"App-header\">\r\n\r\n          {/* <img src={logo} className=\"App-logo\" alt=\"logo\" /> */}\r\n          <div id=\"headTitle\">\r\n            {this.state.headTitle &&\r\n              <Jumbotron>\r\n                <h1 id=\"head-title\">การสอนอมรม 128 ข้อ</h1>\r\n                <hr />\r\n                <label id=\"head-title\">เลือกรูปแบบคำถาม</label>\r\n                <div className=\"btn-start\">\r\n                  <Row>\r\n                    <Col xs={12} sm={12} md={12} id=\"btn-sort\">\r\n                      <Button\r\n                        animated\r\n                        fluid\r\n                        icon labelPosition='left'\r\n                        inverted color='green'\r\n                        size='large'\r\n                        onClick={() => this.setState({ choice1: !this.state.choice1, choice2: false })}>\r\n                        <Button.Content visible>\r\n                          <Icon name='align justify' />\r\n                          <span className=\"App\">    แบบเรียงลำดับ</span>\r\n                        </Button.Content>\r\n                        <Button.Content hidden>\r\n                          <Icon name='align justify' />\r\n                        </Button.Content>\r\n                      </Button>\r\n                      {/* <Button outline block size=\"lg\" color=\"success\" onClick={() => this.setState({ choice1: !this.state.choice1, choice2: false })}> แบบเรียงลำดับ </Button> */}\r\n                    </Col>\r\n                    <Col xs={12} sm={12} md={12} id=\"btn-random\">\r\n                      <Button\r\n                        animated\r\n                        fluid\r\n                        \r\n                        inverted color='blue'\r\n                        size='large'\r\n                        onClick={() => this.setState({ choice2: !this.state.choice2, choice1: false })}>\r\n                        <Button.Content \r\n                          visible\r\n                          icon labelPosition='left'\r\n                          >\r\n                          <Icon name='random' />\r\n                          <span className=\"App\">    แบบสุ่ม</span>\r\n                        </Button.Content>\r\n                        <Button.Content hidden>\r\n                          <Icon name='random' />\r\n                        </Button.Content>\r\n                      </Button>\r\n                    </Col>\r\n                  </Row>\r\n\r\n                </div>\r\n              </Jumbotron>\r\n            }\r\n          </div>\r\n\r\n          <div className=\"card-form\">\r\n            {this.state.choice1 &&\r\n              <Row>\r\n                <Col xs={10} sm={10} md={10}>\r\n                  <CardComponentSort\r\n                    number={0}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n\r\n            }\r\n            {this.state.choice2 &&\r\n              <Row>\r\n                <Col xs={10} sm={12} md={12}>\r\n                  <CardComponent\r\n                    number={this.props.number}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n            }\r\n          </div>\r\n\r\n        </header>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport {\r\n  Collapse,\r\n  Navbar,\r\n  NavbarToggler,\r\n  NavbarBrand,\r\n  Nav,\r\n  NavItem,\r\n  NavLink,\r\n  UncontrolledDropdown,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem\r\n} from 'reactstrap';\r\nimport './nav.css'\r\n\r\n\r\nexport default class Example extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.toggle = this.toggle.bind(this);\r\n    this.state = {\r\n      isOpen: false\r\n    };\r\n  }\r\n  toggle() {\r\n    this.setState({\r\n      isOpen: !this.state.isOpen\r\n    });\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Navbar color=\"light\" light expand=\"md\">\r\n          <NavbarBrand href=\"/\" id=\"text-head\">ถามตอบ 128 คำถาม</NavbarBrand>\r\n          <NavbarToggler onClick={this.toggle} />\r\n          <Collapse isOpen={this.state.isOpen} navbar>\r\n            <Nav className=\"ml-auto\" navbar>\r\n              <NavItem>\r\n                <NavLink href=\"/components/\" id=\"text-head\">คำแนะนำ</NavLink>\r\n              </NavItem>\r\n              <NavItem>\r\n                <NavLink href=\"https://github.com/reactstrap/reactstrap\" id=\"text-head\">ติดต่อ</NavLink>\r\n              </NavItem>\r\n              <NavItem>\r\n                <NavLink href=\"https://github.com/reactstrap/reactstrap\" id=\"text-head\">เกี่ยวกับ</NavLink>\r\n              </NavItem>\r\n              {/* <UncontrolledDropdown nav inNavbar>\r\n                <DropdownToggle nav caret>\r\n                  Options\r\n                </DropdownToggle>\r\n                <DropdownMenu right>\r\n                  <DropdownItem>\r\n                    Option 1\r\n                  </DropdownItem>\r\n                  <DropdownItem>\r\n                    Option 2\r\n                  </DropdownItem>\r\n                  <DropdownItem divider />\r\n                  <DropdownItem>\r\n                    Reset\r\n                  </DropdownItem>\r\n                </DropdownMenu>\r\n              </UncontrolledDropdown> */}\r\n            </Nav>\r\n          </Collapse>\r\n        </Navbar>\r\n      </div>\r\n    );\r\n  }\r\n}","import React, { Component } from 'react'\r\nimport { Container, Row, Col } from \"reactstrap\";\r\nimport { Icon, Image } from 'semantic-ui-react'\r\nimport './footer.css'\r\n\r\nclass Footer extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"footer-bg\">\r\n                <Container>\r\n                    <Row>\r\n                        <Col className=\"copyright\" xs=\"12\" sm=\"12\">\r\n                            <p className=\"text-copyrigth\">©PichitreeChakorn 7002 2018 v1.0.0</p>\r\n                        </Col>\r\n\r\n                    </Row>\r\n                </Container>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Footer","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport { Container, Row, Col } from 'reactstrap'\nimport './App.css';\nimport BackgroundImage from 'react-background-image-loader';\nimport Home from './component/home/home'\nimport Nav from './component/nav/nav'\nimport Footer from './component/footer/footer'\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      random: 0\n    };\n  }\n\n  render() {\n    return (\n        <Row>\n          <Col xs=\"12\" sm=\"12\" md=\"12\">\n              <Nav />\n              <div className=\"bg-header\">\n                <BackgroundImage src=\"https://images6.alphacoders.com/310/thumb-1920-310137.jpg\">\n                  <Home\n                    number={this.state.random}\n                  />\n                </BackgroundImage>\n              </div>\n              <div className=\"footer\">\n                <Footer />\n              </div>\n          </Col>\n        </Row>\n\n\n      // <div className=\"App\">\n      //   <header className=\"App-header\">\n      //     <img src={logo} className=\"App-logo\" alt=\"logo\" />\n      //     <p>\n      //       Edit <code>src/App.js</code> and save to reload.\n      //     </p>\n      //     <a\n      //       className=\"App-link\"\n      //       href=\"https://reactjs.org\"\n      //       target=\"_blank\"\n      //       rel=\"noopener noreferrer\"\n      //     >\n      //       Learn React\n      //     </a>\n      //   </header>\n      // </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'semantic-ui-css/semantic.min.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}